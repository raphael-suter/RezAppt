{"version":3,"sources":["components/Results/Recipe/index.js","components/Results/index.js","components/Search/Ingredients/index.js","components/Search/SearchField/index.js","components/Search/index.js","themes/GlobalStyle.js","themes/Theme.js","index.js"],"names":["Container","styled","article","theme","mainColor","shadowColor","radius","Image","img","Info","div","Title","h1","Ingredients","Ingredient","span","mediumColor","Recipe","recipe","title","image","missedIngredients","onClick","src","length","map","index","name","Results","props","state","recipes","this","item","prevProps","ingredients","fetch","join","then","response","json","setState","catch","alert","React","PureComponent","button","onDeleteIngredient","TextField","input","attrs","type","Button","lightColor","Icon","List","ul","ListItem","li","darkColor","SearchField","value","suggestions","onType","onSelectSuggestion","placeholder","onChange","target","process","Search","evt","data","results","ingredient","slice","push","onIngredientsUpdate","splice","createGlobalStyle","Theme","Content","App","GlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a31ce3f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.article`\r\n  margin: 1rem 0 0;\r\n  background: ${({ theme }) => theme.mainColor};\r\n  box-shadow: 0 0 8px ${({ theme }) => theme.shadowColor};\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  padding: 0.5rem 1rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-bottom: 0.2rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Ingredients = styled.div`\r\n  display: flex;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Ingredient = styled.span`\r\n  margin: 0.5rem 1rem 0.5rem 0;\r\n  padding: 0.4rem 1rem;\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  font-size: 16px;\r\n  white-space: nowrap;\r\n  background: ${({ theme }) => theme.mediumColor};\r\n`;\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  const { title, image, missedIngredients } = recipe;\r\n\r\n  return (\r\n    <Container onClick>\r\n      <Image src={image} />\r\n      <Info>\r\n        <Title>{title}</Title>\r\n        {missedIngredients && missedIngredients.length > 0 && (\r\n          <Ingredients>\r\n            {missedIngredients.map(({ name }, index) => (\r\n              <Ingredient key={index}>{name}</Ingredient>\r\n            ))}\r\n          </Ingredients>\r\n        )}\r\n      </Info>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nclass Results extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      recipes: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { recipes } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {recipes &&\r\n          recipes.length > 0 &&\r\n          recipes.map((item, index) => <Recipe key={index} recipe={item} />)}\r\n      </>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      const { ingredients } = this.props;\r\n\r\n      fetch(\r\n        `https://api.spoonacular.com/recipes/findByIngredients?apiKey=7118bf08cdc1468b891131924bca9e21&ingredients=${ingredients.join(\r\n          \",\"\r\n        )}&number=8`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((recipes) => this.setState({ recipes }))\r\n        .catch(() => alert(\"Error!\"));\r\n    }\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Ingredient = styled.button`\r\n  margin: 1rem 1rem 0 0;\r\n  padding: 0.4rem 1rem;\r\n  border: none;\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  box-shadow: 0 0 8px ${({ theme }) => theme.shadowColor};\r\n  font-size: 16px;\r\n  white-space: nowrap;\r\n  background: ${({ theme }) => theme.mediumColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Ingredients = ({ ingredients, onDeleteIngredient }) => (\r\n  <Container>\r\n    {ingredients &&\r\n      ingredients.length > 0 &&\r\n      ingredients.map((item, index) => (\r\n        <Ingredient key={index} onClick={() => onDeleteIngredient(index)}>\r\n          {item}\r\n        </Ingredient>\r\n      ))}\r\n  </Container>\r\n);\r\n\r\nexport default Ingredients;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  box-shadow: 0 0 8px ${({ theme }) => theme.shadowColor};\r\n`;\r\n\r\nconst TextField = styled.input.attrs(() => ({\r\n  type: \"text\",\r\n}))`\r\n  flex: 1;\r\n  min-width: 0;\r\n  padding: 0.8rem 1rem;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-top-left-radius: ${({ theme }) => theme.radius};\r\n  border-bottom-left-radius: ${({ theme }) => theme.radius};\r\n  font-size: 18px;\r\n  background: ${({ theme }) => theme.mainColor};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 60px;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-top-right-radius: ${({ theme }) => theme.radius};\r\n  border-bottom-right-radius: ${({ theme }) => theme.radius};\r\n  background: ${({ theme }) => theme.lightColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 28px;\r\n  margin-top: 3px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: calc(47px + 1rem);\r\n  padding: 0.5rem 0;\r\n  list-style: none;\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  background: ${({ theme }) => theme.mainColor};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  padding: 0.5rem 1rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.darkColor};\r\n  }\r\n`;\r\n\r\nconst SearchField = ({ value, suggestions, onType, onSelectSuggestion }) => (\r\n  <Container>\r\n    <TextField placeholder=\"Suche\" value={value} onChange={onType} />\r\n    <Button onClick={() => onType({ target: { value: \"\" } })}>\r\n      <Icon src={`${process.env.PUBLIC_URL}/close.svg`} />\r\n    </Button>\r\n    {suggestions && suggestions.length > 0 && (\r\n      <List>\r\n        {suggestions.map(({ name }, index) => (\r\n          <ListItem key={index} onClick={() => onSelectSuggestion(name)}>\r\n            {name}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport Ingredients from \"./Ingredients\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nclass Search extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: [],\r\n      ingredients: props.ingredients,\r\n    };\r\n\r\n    this.onIngredientsUpdate = props.onIngredientsUpdate;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      state: { value, suggestions, ingredients },\r\n      onType,\r\n      onSelectSuggestion,\r\n      onDeleteIngredient,\r\n    } = this;\r\n\r\n    return (\r\n      <>\r\n        <SearchField\r\n          value={value}\r\n          suggestions={suggestions}\r\n          onType={onType}\r\n          onSelectSuggestion={onSelectSuggestion}\r\n        />\r\n        <Ingredients\r\n          ingredients={ingredients}\r\n          onDeleteIngredient={onDeleteIngredient}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  onType = (evt) => {\r\n    const {\r\n      target: { value },\r\n    } = evt;\r\n\r\n    fetch(\r\n      `https://api.spoonacular.com/food/ingredients/search?apiKey=7118bf08cdc1468b891131924bca9e21&query=${value}&number=8`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ suggestions: data.results }))\r\n      .catch(() => alert(\"Error!\"));\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  onSelectSuggestion = (ingredient) => {\r\n    const ingredients = this.state.ingredients.slice();\r\n    ingredients.push(ingredient);\r\n\r\n    this.setState({ value: \"\", suggestions: [], ingredients });\r\n    this.onIngredientsUpdate(ingredients);\r\n  };\r\n\r\n  onDeleteIngredient = (index) => {\r\n    const ingredients = this.state.ingredients.slice();\r\n    ingredients.splice(index, 1);\r\n\r\n    this.setState({ ingredients });\r\n    this.onIngredientsUpdate(ingredients);\r\n  };\r\n}\r\n\r\nexport default Search;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Roboto', sans-serif;\r\n    outline: none;\r\n  }\r\n\r\n  body {\r\n    height: 100vh;\r\n    background: no-repeat center center / cover;\r\n    background-image: url(${process.env.PUBLIC_URL}/background.jpg);\r\n  }\r\n`;\r\n","const Theme = {\r\n  mainColor: \"#FFFFFF\",\r\n  lightColor: \"#548d5b\",\r\n  mediumColor: \"#FACD66\",\r\n  darkColor: \"#d5dbdb\",\r\n  shadowColor: \"rgba(0, 0, 0, 0.4)\",\r\n  radius: \"5px\",\r\n};\r\n\r\nexport default Theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Results from \"./components/Results\";\nimport Search from \"./components/Search\";\nimport GlobalStyle from \"./themes/GlobalStyle\";\nimport Theme from \"./themes/Theme\";\n\nconst Container = styled.div`\n  height: 100vh;\n  max-height: 100vh;\n  overflow: auto;\n`;\n\nconst Content = styled.div`\n  max-width: 800px;\n  margin: auto;\n  padding: 0 1.2rem 1.2rem;\n`;\n\nconst Title = styled.h1`\n  margin: 4rem 1rem 2rem;\n  font-family: \"Lobster\", cursive;\n  font-size: 72px;\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.shadowColor} 4px 4px;\n  color: ${({ theme }) => theme.mainColor};\n`;\n\nclass App extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      ingredients: [],\n    };\n  }\n\n  render() {\n    const { ingredients } = this.state;\n\n    return (\n      <ThemeProvider theme={Theme}>\n        <GlobalStyle />\n        <Container>\n          <Content>\n            <Title>RezAppt</Title>\n            <Search\n              ingredients={ingredients}\n              onIngredientsUpdate={(ingredients) =>\n                this.setState({ ingredients })\n              }\n            />\n            <Results ingredients={ingredients} />\n          </Content>\n        </Container>\n      </ThemeProvider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}