{"version":3,"sources":["components/Search/Ingredients/index.js","components/Search/SearchField/index.js","components/Search/index.js","themes/GlobalStyle.js","themes/Theme.js","index.js"],"names":["Container","styled","div","Ingredient","button","theme","radius","shadowColor","mediumColor","Ingredients","ingredients","onDeleteIngredient","map","item","index","onClick","TextField","input","attrs","type","mainColor","Button","lightColor","Icon","img","List","ul","ListItem","li","darkColor","SearchField","value","suggestions","onType","onSelectSuggestion","placeholder","onChange","target","src","process","length","name","Search","props","evt","fetch","then","response","json","data","setState","results","catch","alert","ingredient","state","push","onIngredientsUpdate","slice","splice","this","React","PureComponent","createGlobalStyle","Theme","Title","h1","App","GlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68d2730c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  margin: 1rem 0;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Ingredient = styled.button`\r\n  margin-right: 1rem;\r\n  padding: 0.4rem 1rem;\r\n  border: none;\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  box-shadow: 0 0 8px ${({ theme }) => theme.shadowColor};\r\n  font-size: 16px;\r\n  background: ${({ theme }) => theme.mediumColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Ingredients = ({ ingredients, onDeleteIngredient }) => (\r\n  <Container>\r\n    {ingredients.map((item, index) => (\r\n      <Ingredient key={index} onClick={() => onDeleteIngredient(index)}>\r\n        {item}\r\n      </Ingredient>\r\n    ))}\r\n  </Container>\r\n);\r\n\r\nexport default Ingredients;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  box-shadow: 0 0 8px ${({ theme }) => theme.shadowColor};\r\n`;\r\n\r\nconst TextField = styled.input.attrs(() => ({\r\n  type: \"text\",\r\n}))`\r\n  flex: 1;\r\n  min-width: 0;\r\n  padding: 0.8rem 1rem;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-top-left-radius: ${({ theme }) => theme.radius};\r\n  border-bottom-left-radius: ${({ theme }) => theme.radius};\r\n  font-size: 18px;\r\n  background: ${({ theme }) => theme.mainColor};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 60px;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-top-right-radius: ${({ theme }) => theme.radius};\r\n  border-bottom-right-radius: ${({ theme }) => theme.radius};\r\n  background: ${({ theme }) => theme.lightColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 28px;\r\n  margin-top: 3px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: calc(47px + 1rem);\r\n  padding: 0.5rem 0;\r\n  list-style: none;\r\n  border-radius: ${({ theme }) => theme.radius};\r\n  background: ${({ theme }) => theme.mainColor};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  padding: 0.5rem 1rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.darkColor};\r\n  }\r\n`;\r\n\r\nconst SearchField = ({ value, suggestions, onType, onSelectSuggestion }) => (\r\n  <Container>\r\n    <TextField placeholder=\"Suche\" value={value} onChange={onType} />\r\n    <Button onClick={() => onType({ target: { value: \"\" } })}>\r\n      <Icon src={`${process.env.PUBLIC_URL}/close.svg`} />\r\n    </Button>\r\n    {suggestions && suggestions.length > 0 && (\r\n      <List>\r\n        {suggestions.map(({ name }, index) => (\r\n          <ListItem key={index} onClick={() => onSelectSuggestion(name)}>\r\n            {name}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Ingredients from \"./Ingredients\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 800px;\r\n  margin: auto;\r\n  padding: 0 1.2rem;\r\n`;\r\n\r\nclass Search extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: [],\r\n      ingredients: props.ingredients,\r\n    };\r\n\r\n    this.onIngredientsUpdate = props.onIngredientsUpdate;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      state: { value, suggestions, ingredients },\r\n      onType,\r\n      onSelectSuggestion,\r\n      onDeleteIngredient,\r\n    } = this;\r\n\r\n    return (\r\n      <Container>\r\n        <SearchField\r\n          value={value}\r\n          suggestions={suggestions}\r\n          onType={onType}\r\n          onSelectSuggestion={onSelectSuggestion}\r\n        />\r\n        <Ingredients\r\n          ingredients={ingredients}\r\n          onDeleteIngredient={onDeleteIngredient}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  onType = (evt) => {\r\n    const {\r\n      target: { value },\r\n    } = evt;\r\n\r\n    if (value !== \"\") {\r\n      fetch(\r\n        `https://api.spoonacular.com/food/ingredients/search?apiKey=0d208bfdd320463c9178a20f8b071b13&query=${value}&number=8`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => this.setState({ suggestions: data.results }))\r\n        .catch(() => alert(\"Error!\"));\r\n    }\r\n\r\n    this.setState({ value });\r\n  };\r\n\r\n  onSelectSuggestion = (ingredient) => {\r\n    const { ingredients } = this.state;\r\n    ingredients.push(ingredient);\r\n\r\n    this.setState({ value: \"\", suggestions: [], ingredients });\r\n    this.onIngredientsUpdate(ingredients);\r\n  };\r\n\r\n  onDeleteIngredient = (index) => {\r\n    const ingredients = this.state.ingredients.slice();\r\n    ingredients.splice(index, 1);\r\n\r\n    this.setState({ ingredients });\r\n    this.onIngredientsUpdate(ingredients);\r\n  };\r\n}\r\n\r\nexport default Search;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Roboto', sans-serif;\r\n    outline: none;\r\n  }\r\n\r\n  body {\r\n    min-height: 100vh;\r\n    background: no-repeat center center / cover;\r\n    background-image: url(${process.env.PUBLIC_URL}/background.jpg);\r\n    overflow: hidden;\r\n  }\r\n`;\r\n","const Theme = {\r\n  mainColor: \"#FFFFFF\",\r\n  lightColor: \"#548d5b\",\r\n  mediumColor: \"#FACD66\",\r\n  darkColor: \"#d5dbdb\",\r\n  shadowColor: \"rgba(0, 0, 0, 0.4)\",\r\n  radius: \"5px\",\r\n};\r\n\r\nexport default Theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Search from \"./components/Search\";\nimport GlobalStyle from \"./themes/GlobalStyle\";\nimport Theme from \"./themes/Theme\";\n\nconst Title = styled.h1`\n  margin: 4rem 1rem 2rem;\n  text-align: center;\n  font-family: \"Lobster\", cursive;\n  font-size: 72px;\n  text-shadow: ${({ theme }) => theme.shadowColor} 4px 4px;\n  color: ${({ theme }) => theme.mainColor};\n`;\n\nclass App extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      ingredients: [],\n    };\n  }\n\n  render() {\n    const { ingredients } = this.state;\n\n    return (\n      <ThemeProvider theme={Theme}>\n        <GlobalStyle />\n        <Title>RezAppt</Title>\n        <Search\n          ingredients={ingredients}\n          onIngredientsUpdate={(ingredients) => this.setState({ ingredients })}\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}